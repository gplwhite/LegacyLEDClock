<UserControl x:Class="Clock4Windows.Views.ClockView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" 
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:lib="clr-namespace:ClockLib;assembly=ClockLib"
             xmlns:vm="clr-namespace:Clock4Windows.ViewModels"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:Clock4Windows.Behaviors"
             xmlns:converters="clr-namespace:Clock4Windows.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="250" d:DesignWidth="500" Margin="5, 5, 5, 20">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:EnumBooleanConverter x:Key="EnumConverter" />
    </UserControl.Resources>

    <StackPanel>

        <TextBox Text="{Binding ClockName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource NameTextBox}" controls:TextBoxHelper.SelectAllOnFocus="True" />
        <Border Height="1" Background="{DynamicResource AccentColorBrush}" />

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <StackPanel Margin="0, 20">
                <StackPanel Orientation="Horizontal">
                    <Label>Mode</Label>
                    <ComboBox x:Name="AvailableClockModes" Width="120" VerticalAlignment="Top" SelectedItem="{Binding ClockMode}" />
                </StackPanel>

                <Button x:Name="EditMode" Margin="0,10" HorizontalAlignment="Left" Width="38" Height="38" Style="{DynamicResource MetroCircleButtonStyle}" Visibility="{Binding CanEditMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Rectangle Width="12" Height="12" Margin="8">
                        <Rectangle.Fill>
                            <VisualBrush Visual="{StaticResource appbar_edit}" Stretch="Fill" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
            </StackPanel>


            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="0, 20" Visibility="{Binding ModeRequiresEpoch, Converter={StaticResource BooleanToVisibilityConverter}}">

                <Label VerticalAlignment="Top" Padding="15, 5, 0, 5">From</Label>

                <StackPanel Orientation="Vertical" Margin="5, 0">
                    <RadioButton Margin="5, 5" IsChecked="{Binding EpochMode, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static vm:EpochMode.Now}}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center">Now</TextBlock>
                            <TextBlock Margin="5, 0" Text="{Binding NowTime, StringFormat=\{0:hh\\:mm\\:ss\}}"></TextBlock>
                        </StackPanel>
                    </RadioButton>
                    <RadioButton Margin="5, 0" IsChecked="{Binding EpochMode, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static vm:EpochMode.AbsoluteTime}}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" Width="47">Absolute</TextBlock>
                            <StackPanel Margin="5, 15, 0, 0">
                                <TextBox Width="80" Text="{Binding AbsoluteTime}">
                                    <i:Interaction.Behaviors>
                                        <behaviors:TextBoxInputMaskBehavior InputMask="00:00:00" />
                                    </i:Interaction.Behaviors>
                                </TextBox>
                                <StackPanel Orientation="Horizontal">
                                    <Label Padding="5, 2" FontSize="8">hour</Label>
                                    <Label Padding="5, 2" FontSize="8">min</Label>
                                    <Label Padding="5, 2" FontSize="8">sec</Label>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </RadioButton>
                    <RadioButton Margin="5, 5" IsChecked="{Binding EpochMode, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static vm:EpochMode.RelativeTime}}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" Width="47">Relative</TextBlock>
                            <StackPanel Margin="5, 15, 0, 0">
                                <TextBox Width="80" FontSize="14"  Text="{Binding RelativeTime}">
                                    <i:Interaction.Behaviors>
                                        <behaviors:TextBoxInputMaskBehavior InputMask="00:00:00" />
                                    </i:Interaction.Behaviors>
                                </TextBox>
                                <StackPanel Orientation="Horizontal">
                                    <Label Padding="5, 2" FontSize="8">hour</Label>
                                    <Label Padding="5, 2" FontSize="8">min</Label>
                                    <Label Padding="5, 2" FontSize="8">sec</Label>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </RadioButton>
                </StackPanel>

            </StackPanel>



            <Button Grid.Column="2" HorizontalAlignment="Right" Width="38" Height="38" Style="{DynamicResource MetroCircleButtonStyle}" cal:Message.Attach="AddClockToDevice($dataContext)">
                <Rectangle Width="12" Height="12" Margin="8">
                    <Rectangle.Fill>
                        <VisualBrush Visual="{StaticResource appbar_arrow_right}" Stretch="Fill" />
                    </Rectangle.Fill>
                </Rectangle>
            </Button>
        </Grid>

        <Grid>
            <Button x:Name="ApplyChanges" Width="50" Visibility="{Binding HasChanges, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MetroButton}">
                        <Setter Property="Content" Value="Apply" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ClockMode}" Value="{x:Static lib:ClockMode.CountUp}">
                                <Setter Property="Content" Value="Start" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ClockMode}" Value="{x:Static lib:ClockMode.CountUpFormatted}">
                                <Setter Property="Content" Value="Start" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ClockMode}" Value="{x:Static lib:ClockMode.CountDown}">
                                <Setter Property="Content" Value="Start" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ClockMode}" Value="{x:Static lib:ClockMode.CountDownFormatted}">
                                <Setter Property="Content" Value="Start" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <TextBlock HorizontalAlignment="Right" FontSize="18"  Margin="20, 5" Text="{Binding ClockOutput}" />

        </Grid>

    </StackPanel>
</UserControl>
